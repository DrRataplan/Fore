@startuml

class HTMLElement{
}
class LitElement

class XfForm {
    refresh()
}
LitElement <|-- XfForm


class ForeElementMixin{
    getModel()
    evalInContext()
    getModelItem()
    isNotBound()
    isBound()
    getBindingExpr()
    _getParentBindingElement()
    _inScopeContext()
}
package "model" #DDDDDD {
    class XfModel{
        bindingMap[]
        rebuild()
        recalculate()
        revalidate()
        registerBinding()
    }
    class XfInstance{
        getInstanceData()
        getDefaultContext()
    }

    class ModelItem{
        node
        getValue
        setValue
        readonly
        required
        relevant
        valid
        type
    }

    class XfBind{
        createModelItem()
        buildBindGraph()
    }
    class XfSubmission

    HTMLElement <|-- XfInstance
    HTMLElement <|-- XfBind
    HTMLElement <|-- XfModel


}

XfModel o-- ModelItem

package "view" #DDDDDD{
    abstract class XfContainer{
        refresh()
    }
    abstract class AbstractControl{
        getValue()
        refresh()
    }
    class XfSwitch #lightgrey
    class XfSelect1 #lightgrey
    class XfSelect #lightgrey
    AbstractControl <|-- XfInput
    AbstractControl <|-- XfOutput
    AbstractControl <|-- XfButton
    XfContainer <|-- XfRepeat
    XfContainer <|-- XfRepeatitem
    XfContainer <|-- XfGroup
    XfContainer <|-- XfSwitch
    AbstractControl <|-- XfSelect
    AbstractControl <|-- XfSelect1
}

package "controller" #DDDDDD{
    class XfAction{
        needsRebuild
        needsRecalculate
        needsRevalidate
        needsRefresh
        execute()
        actionPerformed()
    }
    XfAction <|-- XfDelete
    XfAction <|-- XfAppend
    XfAction <|-- XfInsert
    XfAction <|-- XfSetvalue

}


LitElement <|-- XfContainer
LitElement <|-- AbstractControl
ForeElementMixin *.. AbstractControl
ForeElementMixin *.. XfContainer


HTMLElement <|-- XfAction
ForeElementMixin *.. XfAction




@enduml
